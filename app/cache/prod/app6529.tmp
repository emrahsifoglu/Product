<?php

use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\Routing\RequestContext;

/**
 * appProdUrlMatcher
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlMatcher extends Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
{
    /**
     * Constructor.
     */
    public function __construct(RequestContext $context)
    {
        $this->context = $context;
    }

    public function match($pathinfo)
    {
        $allow = array();
        $pathinfo = rawurldecode($pathinfo);

        // index
        if (0 === strpos($pathinfo, '/index') && preg_match('#^/index/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'index')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ContentController::indexAction',));
        }

        // hello
        if (0 === strpos($pathinfo, '/hello') && preg_match('#^/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'hello')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ContentController::helloAction',));
        }

        // dr
        if ($pathinfo === '/dr') {
            return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ContentController::drAction',  '_route' => 'dr',);
        }

        if (0 === strpos($pathinfo, '/product')) {
            // product
            if (rtrim($pathinfo, '/') === '/product') {
                if (substr($pathinfo, -1) !== '/') {
                    return $this->redirect($pathinfo.'/', 'product');
                }

                return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::indexAction',  '_route' => 'product',);
            }

            // product_show
            if (preg_match('#^/product/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'product_show')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::showAction',));
            }

            // product_new
            if ($pathinfo === '/product/new') {
                return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::newAction',  '_route' => 'product_new',);
            }

            // product_create
            if ($pathinfo === '/product/create') {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_product_create;
                }

                return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::createAction',  '_route' => 'product_create',);
            }
            not_product_create:

            // product_edit
            if (preg_match('#^/product/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'product_edit')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::editAction',));
            }

            // product_update
            if (preg_match('#^/product/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                    $allow = array_merge($allow, array('POST', 'PUT'));
                    goto not_product_update;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'product_update')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::updateAction',));
            }
            not_product_update:

            // product_delete
            if (preg_match('#^/product/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                    $allow = array_merge($allow, array('POST', 'DELETE'));
                    goto not_product_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'product_delete')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\ProductController::deleteAction',));
            }
            not_product_delete:

        }

        // all
        if ($pathinfo === '/all') {
            return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\TestController::allAction',  '_route' => 'all',);
        }

        // show
        if (0 === strpos($pathinfo, '/show') && preg_match('#^/show/(?P<id>[^/]++)$#s', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'show')), array (  '_controller' => 'Pria\\DemoBundle\\Controller\\TestController::showAction',));
        }

        if (0 === strpos($pathinfo, '/ajax')) {
            // ajaxIndex
            if ($pathinfo === '/ajaxIndex') {
                return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\TestController::ajaxIndexAction',  '_route' => 'ajaxIndex',);
            }

            // ajaxAll
            if ($pathinfo === '/ajaxAll') {
                return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\TestController::ajaxAllAction',  '_route' => 'ajaxAll',);
            }

        }

        // upload
        if ($pathinfo === '/upload') {
            return array (  '_controller' => 'Pria\\DemoBundle\\Controller\\UploadController::uploadAction',  '_route' => 'upload',);
        }

        if (0 === strpos($pathinfo, '/login')) {
            // login
            if ($pathinfo === '/login') {
                return array (  '_controller' => 'Pria\\ProfileBundle\\Controller\\SecurityController::loginAction',  '_route' => 'login',);
            }

            // login_form
            if ($pathinfo === '/login/form') {
                return array (  '_controller' => 'Pria\\ProfileBundle\\Controller\\SecurityController::loginFormAction',  '_route' => 'login_form',);
            }

        }

        // createUser
        if ($pathinfo === '/create/user') {
            return array (  '_controller' => 'Pria\\ProfileBundle\\Controller\\SecurityController::createUserAction',  '_route' => 'createUser',);
        }

        if (0 === strpos($pathinfo, '/log')) {
            // login_check
            if ($pathinfo === '/login_check') {
                return array('_route' => 'login_check');
            }

            // logout
            if ($pathinfo === '/logout') {
                return array('_route' => 'logout');
            }

        }

        // secure_area
        if ($pathinfo === '/secure_area') {
            return array (  '_controller' => 'Pria\\ProfileBundle\\Controller\\SecurityController::dumpStringAction',  '_route' => 'secure_area',);
        }

        if (0 === strpos($pathinfo, '/file')) {
            // file_file_homepage
            if ($pathinfo === '/file/upload') {
                return array (  '_controller' => 'File\\FileBundle\\Controller\\UploadController::uploadAction',  '_route' => 'file_file_homepage',);
            }

            // file_file
            if ($pathinfo === '/file/index') {
                return array (  '_controller' => 'File\\FileBundle\\Controller\\DefaultController::indexAction',  '_route' => 'file_file',);
            }

        }

        throw 0 < count($allow) ? new MethodNotAllowedException(array_unique($allow)) : new ResourceNotFoundException();
    }
}
